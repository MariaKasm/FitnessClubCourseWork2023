"use strict";
/** @format */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var express_1 = require("express");
var userController_1 = __importDefault(require("../controllers/userController"));
var typesubscriptionController_1 = __importDefault(require("../controllers/typesubscriptionController"));
var subscriptionController_1 = __importDefault(require("../controllers/subscriptionController"));
var coachesController_1 = __importDefault(require("../controllers/coachesController"));
var coachesReviewsControllers_1 = __importDefault(require("../controllers/coachesReviewsControllers"));
var authMiddleware_1 = __importDefault(require("../middleware/authMiddleware"));
var checkRoleMiddleware_1 = __importDefault(require("../middleware/checkRoleMiddleware"));
var router = (0, express_1.Router)();
router.post("/registration", userController_1.default.registration);
router.post("/login", userController_1.default.login);
router.put("/userupdate", authMiddleware_1.default, userController_1.default.update);
router.get("/check", authMiddleware_1.default, userController_1.default.check);
router.post("/createSubscription", checkRoleMiddleware_1.default, subscriptionController_1.default.create);
router.get("/getAlltypeSubscription", subscriptionController_1.default.getAll);
router.delete("/deleteSubscription", subscriptionController_1.default.delete);
router.post("/createtype", checkRoleMiddleware_1.default, typesubscriptionController_1.default.create);
router.get("/getAlltype", typesubscriptionController_1.default.getAll);
router.delete("/deletetype", typesubscriptionController_1.default.delete);
router.post("/createCoaches", coachesController_1.default.create);
router.get("/getAllCoaches", coachesController_1.default.getAll);
router.get("/geOneCoaches", coachesController_1.default.getOne);
router.delete("/deleteCoaches", coachesController_1.default.delete);
router.post("/createReviews", coachesReviewsControllers_1.default.create);
router.get("/getAllReviews", coachesReviewsControllers_1.default.getAll);
router.get("/geOneReviews", coachesReviewsControllers_1.default.getOne);
router.delete("/deleteReviews", coachesReviewsControllers_1.default.delete);
exports.default = router;
